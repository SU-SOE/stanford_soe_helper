<?php

/**
 * @file
 * Code for the Stanford SoE Helper Event feature.
 */

include_once 'stanford_soe_helper_event.features.inc';

/**
 * Implements hook_views_pre_view().
 */
function stanford_soe_helper_event_views_pre_view(&$view, &$display_id, &$args) {
  if ($view->name == 'stanford_events_manage') {

    // Add Field: Content: Featured.
    $options['id'] = 'field_s_event_featured';
    $options['table'] = 'field_data_field_s_event_featured';
    $options['field'] = 'field_s_event_featured';

    stanford_related_content_insert_item(
      $view,
      $display_id,
      'field',
      'field_data_field_s_event_featured',
      'field_s_event_featured',
      $options,
      'field_s_event_type');

    if ($view->set_display('page')) {
      $handler = $view->display_handler;

      // Add VBO option.
      $options = $handler->get_option('fields');
      $options['views_bulk_operations']['vbo_operations']['action::views_bulk_operations_modify_action']
        ['settings']['display_values']['stanford_event::field_s_event_featured']
        = 'stanford_event::field_s_event_featured';
      $handler->set_option('fields', $options);

      // Add Filter criterion: Content: Featured (field_s_event_featured).
      $options = $handler->get_option('filters');
      $options['field_s_event_featured_value']['id'] = 'field_s_event_featured_value';
      $options['field_s_event_featured_value']['table'] = 'field_data_field_s_event_featured';
      $options['field_s_event_featured_value']['field'] = 'field_s_event_featured_value';
      $options['field_s_event_featured_value']['exposed'] = TRUE;
      $options['field_s_event_featured_value']['expose']['operator_id'] = 'field_s_event_featured_value_op';
      $options['field_s_event_featured_value']['expose']['label'] = 'Featured';
      $options['field_s_event_featured_value']['expose']['operator'] = 'field_s_event_featured_value_op';
      $options['field_s_event_featured_value']['expose']['identifier'] = 'field_s_event_featured_value';
      $options['field_s_event_featured_value']['expose']['remember_roles'] = array(
        2 => '2',
        1 => 0,
        12 => 0,
        10 => 0,
        8 => 0,
        6 => 0,
        20 => 0,
        14 => 0,
        16 => 0,
        18 => 0,
      );
      $handler->set_option('filters', $options);
    }
  }
}

/**
 * Alter the results of node_view().
 *
 * This hook is called after the content has been assembled in a structured
 * array and may be used for doing processing which requires that the complete
 * node content structure has been built.
 *
 * If the module wishes to act on the rendered HTML of the node rather than the
 * structured content array, it may use this hook to add a #post_render
 * callback.  Alternatively, it could also implement hook_preprocess_node(). See
 * drupal_render() and theme() documentation respectively for details.
 *
 * @param $build
 *   A renderable array representing the node content.
 *
 */
function stanford_soe_helper_event_node_view_alter(&$build) {
  // Removing the image from node view on stanford_event.
  // Doing this here as we don't want to contribute this back to the feature.
  if ($build['#view_mode'] == 'full' && isset($build['field_stanford_event_image'])) {
    unset($build['field_stanford_event_image']);
  }
}
